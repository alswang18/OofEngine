#pragma once
#include "EngineException.h"
#include "SwitchWin.h"
#include "Keyboard.h"

class Window
{
public:
    // Creates Exception Class in Window
    class Exception : public EngineException
    {
    public:
        Exception(int line, const char* file, HRESULT hr) noexcept;
        const char* what() const noexcept override;
        virtual const char* GetType() const noexcept override;
        static std::string TranslateErrorCode(HRESULT hr) noexcept;
        HRESULT GetErrorCode() const noexcept;
        std::string GetErrorString() const noexcept;

    private:
        HRESULT hr;
    };

private:
    // singleton manages registration/cleanup of window class
    class WindowClass
    {
    public:
        static const char* GetName() noexcept;
        static HINSTANCE GetInstance() noexcept;

    private:
        WindowClass() noexcept;
        ~WindowClass();
        WindowClass(const WindowClass&) = delete;
        WindowClass& operator=(const WindowClass&) = delete;
        static constexpr const char* wndClassName = "D3D Engine Window";
        static WindowClass wndClass;
        HINSTANCE hInst;
    };

public:
    Window(int width, int height, const char* name);
    ~Window();
    Window(const Window&) = delete;
    Window& operator=(const Window&) = delete;

private:
    static LRESULT CALLBACK HandleMsgSetup(HWND hWnd,
        UINT msg,
        WPARAM wParam,
        LPARAM lParam) noexcept;
    static LRESULT CALLBACK HandleMsgThunk(HWND hWnd,
        UINT msg,
        WPARAM wParam,
        LPARAM lParam) noexcept;
    LRESULT HandleMsg(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam) noexcept;

public:
    Keyboard kbd;

private:
    int width;
    int height;
    HWND hWnd;
};

// error exception helper macro that invokes line number and file number.
#define ENGINE_WINDOW_EXCEPT(hr) Window::Execption(__LINE__, __FILE__, hr)

// get last error is a windows api function that retrieves the last error code
// generated by a windows function call.
#define ENGINE_WINDOW_LAST_EXCEPT()                                            \
  Window::Exception(__LINE__, __FILE__, GetLastError())